{"ast":null,"code":"var _jsxFileName = \"/Users/stagiare/Desktop/rre/client/src/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passError, setPassError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loginStatus, setLoginStatus] = useState();\n  var success = {};\n  var failed = {\n    outline: '1px solid #DE3163'\n  };\n\n  // // fetch the data gotten from database\n  // useEffect(() => {\n  //     axios.get('http://localhost:3005/login')\n  //     .then((response) => {\n  //         console.log(response);\n  //     })\n  // }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n    // Email validation\n    if (email.trim().length === 0) {\n      setEmailError('email is required');\n    }\n    if (!emailRegex.test(email)) {\n      setEmailError('Please enter a valid email address.');\n    }\n    // Password validation\n    if (pass.trim().length === 0) {\n      setPassError('password is required');\n    }\n\n    // Check if there are no errors before sending the post request   \n    if (emailError === '' && passError === '') {\n      const data = {\n        email: email,\n        password: pass\n      };\n      axios.post(\"http://localhost:3005/login\", data).then(response => {\n        console.log(response);\n      });\n      // .catch((error) => {\n      //     if (error.response) {\n      //         setPassError('Invalid email or password')\n      //     } else {\n      //         console.log(error)\n      //     }\n      // })\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: emailError == '' ? success : failed,\n        value: email,\n        onChange: e => setEmail(e.target.value) + setEmailError(''),\n        type: \"text\",\n        placeholder: \"youremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: emailError == '' ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: passError == '' ? success : failed,\n        value: pass,\n        onChange: e => setPass(e.target.value) + setPassError(''),\n        type: showPassword ? 'text' : 'password',\n        placeholder: \"********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-pass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: passError == '' ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [passError, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Show Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showPassword,\n          onChange: e => setShowPassword(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"link-btn\",\n        onClick: () => props.onFormSwitch('ResetPassword'),\n        children: \"Forgot passwrod ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"mXWxyo4TYwUImf2QC+qUYdlLwLU=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","pass","setPass","emailError","setEmailError","passError","setPassError","showPassword","setShowPassword","loginStatus","setLoginStatus","success","failed","outline","handleSubmit","e","preventDefault","emailRegex","trim","length","test","data","password","post","then","response","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","style","value","onChange","target","type","placeholder","id","name","checked","onClick","onFormSwitch","_c","$RefreshReg$"],"sources":["/Users/stagiare/Desktop/rre/client/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nexport const Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passError, setPassError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [loginStatus, setLoginStatus] = useState()\n\n    var success = {};\n    var failed = {\n        outline : '1px solid #DE3163'\n    };\n\n    // // fetch the data gotten from database\n    // useEffect(() => {\n    //     axios.get('http://localhost:3005/login')\n    //     .then((response) => {\n    //         console.log(response);\n    //     })\n    // }, [])\n   \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n        // Email validation\n        if (email.trim().length === 0) {\n            setEmailError('email is required')\n        }if (!emailRegex.test(email)) {\n            setEmailError('Please enter a valid email address.') \n        }\n        // Password validation\n        if (pass.trim().length === 0) {\n            setPassError('password is required') \n        }\n\n    \n     // Check if there are no errors before sending the post request   \n    if(emailError === '' && passError === ''){\n        const data = {\n            email : email,\n            password : pass\n        }\n        axios.post(\"http://localhost:3005/login\", data)\n        .then((response) => {\n            console.log(response);\n        })\n        // .catch((error) => {\n        //     if (error.response) {\n        //         setPassError('Invalid email or password')\n        //     } else {\n        //         console.log(error)\n        //     }\n        // })\n    }\n    }\n    return (    \n        <div className='auth-form-container'>\n            <h2>Login</h2>\n            <form className='login-form' onSubmit={handleSubmit}>\n                <label htmlFor='email'>email</label> \n                <input style={emailError  == '' ? success  : failed}  value={email} onChange={(e) => setEmail(e.target.value) + setEmailError('') }type='text' placeholder='youremail@gmail.com' id='email' name='email' />\n                <div>\n                    {emailError == '' ? '' : <div className='error-message'>{emailError}</div>}\n                </div>\n                <label htmlFor='password'>password</label>\n                <input style={passError  == '' ? success : failed} value={pass} onChange={(e) => setPass(e.target.value) + setPassError('') } type={showPassword ? 'text' : 'password'}  placeholder='********' id='password' name='password' />\n                <div className='show-pass'>\n                <div>\n                    { passError == '' ? '' : <div className='error-message'>{passError} </div>}\n                </div>\n                <label> <small>Show Password</small>  </label>\n                <input type=\"checkbox\" checked={showPassword} onChange={e => setShowPassword(e.target.checked)} />\n                </div>\n                <p className='link-btn' onClick={() => props.onFormSwitch('ResetPassword')}>Forgot passwrod ?</p>\n                <button type='submit'>Log In</button>\n            </form>\n            \n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}