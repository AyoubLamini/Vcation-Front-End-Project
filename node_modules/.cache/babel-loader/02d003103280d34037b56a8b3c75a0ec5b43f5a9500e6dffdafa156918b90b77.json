{"ast":null,"code":"var _jsxFileName = \"/Users/stagiare/Desktop/rre/client/src/AdminDashbord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AdminDashboard.css';\nimport lightModeLogo from './logo-light.png';\nimport darkModeLogo from './logo-dark.png';\nimport img1 from './1.jpg';\nimport { SideBar } from './Dashboard-Sidebar';\nimport { MainTable } from './Dashboard-Table';\nimport { MainInsights } from './Dashboard-Insights';\nimport { RightTopBar } from './Dashboard-Right';\nimport { RecentUpdates } from './Dashboard-RecentUpdates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [myIcon, setMyIcon] = useState('material-icons-sharp');\n  const [theme, setTheme] = useState('lightmode');\n  const [isLightActive, setIsLightActive] = useState(true);\n  const [isDarkActive, setIsDarkActive] = useState(false);\n  const [cls, setCls] = useState(); // class of aside in media Query (for mobile) whether the menu is displayed or closed\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: theme === 'lightmode' ? 'light-theme-variables' : 'dark-theme-variables',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: cls,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: theme === 'lightmode' ? lightModeLogo : darkModeLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"close\",\n            onClick: () => setCls('closed'),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: myIcon,\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MainInsights, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MainTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(RecentUpdates, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"kftnTWKuLLix3FtXOFyy7L/Vmpk=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","lightModeLogo","darkModeLogo","img1","SideBar","MainTable","MainInsights","RightTopBar","RecentUpdates","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","myIcon","setMyIcon","theme","setTheme","isLightActive","setIsLightActive","isDarkActive","setIsDarkActive","cls","setCls","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stagiare/Desktop/rre/client/src/AdminDashbord.jsx"],"sourcesContent":["import React, { useState} from 'react';\nimport './AdminDashboard.css';\nimport lightModeLogo from './logo-light.png';\nimport darkModeLogo from './logo-dark.png';\nimport img1 from './1.jpg'\n\nimport {SideBar} from './Dashboard-Sidebar' \nimport { MainTable } from './Dashboard-Table'; \nimport { MainInsights } from './Dashboard-Insights'; \nimport { RightTopBar } from './Dashboard-Right'; \nimport { RecentUpdates } from './Dashboard-RecentUpdates'; \nfunction AdminDashboard () {\n    const [myIcon, setMyIcon] = useState('material-icons-sharp')\n    const [theme, setTheme] = useState('lightmode')\n    const [isLightActive, setIsLightActive] = useState(true)\n    const [isDarkActive, setIsDarkActive] = useState(false)\n    const [cls, setCls] = useState(); // class of aside in media Query (for mobile) whether the menu is displayed or closed\n    return(\n        <body className={theme === 'lightmode' ? 'light-theme-variables' : 'dark-theme-variables'}>\n        <div className='container'>\n            <aside className={cls}> {/* class of aside in media Query (for mobile) whether the menu is displayed or closed */}\n                <div className='top'>\n                    <div className='logo'>\n                        <img src={theme === 'lightmode' ? lightModeLogo : darkModeLogo } />\n                    </div>\n                    <div className='close' onClick={() => setCls('closed')} >\n                        <span className={myIcon}>close</span>\n                    </div>\n                </div>\n                <SideBar />\n            </aside>\n            <main>\n                <h1>Dashboard</h1>\n                <MainInsights />\n                <MainTable />\n            </main>\n            {/*-----------------------------------END OF MAIN------------------------*/}\n            <div className=\"right\">\n               <></>\n                {/* ------------------------END OF TOP---------------------------*/ }\n             <RecentUpdates />\n            </div>\n        </div>\n    </body>\n        \n    )\n}\nexport default AdminDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}