{"ast":null,"code":"var _jsxFileName = \"/Users/stagiare/Desktop/rre/client/src/AdminDashbord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AdminDashboard.css';\nimport lightModeLogo from './logo-light.png';\nimport darkModeLogo from './logo-dark.png';\nimport { SideBar } from './Dashboard-Sidebar';\nimport { MainTable } from './Dashboard-Table';\nimport { MainInsights } from './Dashboard-Insights';\nimport { RightTopBar } from './Dashboard-Right';\nimport { RecentUpdates } from './Dashboard-RecentUpdates';\nimport { AsideTop } from './Dashboard-Aside-Top';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(AsideTop, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 52\n}, this);\nfunction AdminDashboard() {\n  _s();\n  const myIcon = 'material-icons-sharp';\n  const [theme, setTheme] = useState('lightmode');\n  const [isLightActive, setIsLightActive] = useState(true);\n  const [isDarkActive, setIsDarkActive] = useState(false);\n  const [cls, setCls] = useState(); // class of aside in media Query (for mobile) whether the menu is displayed or closed\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: theme === 'lightmode' ? 'light-theme-variables' : 'dark-theme-variables',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: cls,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: theme === 'lightmode' ? lightModeLogo : darkModeLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"close\",\n            onClick: () => setCls('closed'),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: myIcon,\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MainInsights, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MainTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(RightTopBar, {\n          theme: theme,\n          setTheme: setTheme,\n          isLightActive: isLightActive,\n          setIsLightActive: setIsLightActive,\n          isDarkActive: isDarkActive,\n          setIsDarkActive: setIsDarkActive,\n          setCls: setCls\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RecentUpdates, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"2SoWtUWkHHpxKY8cUs4Q4ajQWfI=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","lightModeLogo","darkModeLogo","SideBar","MainTable","MainInsights","RightTopBar","RecentUpdates","AsideTop","jsxDEV","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","AdminDashboard","_s","myIcon","theme","setTheme","isLightActive","setIsLightActive","isDarkActive","setIsDarkActive","cls","setCls","className","children","src","onClick","_c","$RefreshReg$"],"sources":["/Users/stagiare/Desktop/rre/client/src/AdminDashbord.jsx"],"sourcesContent":["import React, { useState} from 'react';\nimport './AdminDashboard.css';\nimport lightModeLogo from './logo-light.png';\nimport darkModeLogo from './logo-dark.png';\n\n\nimport {SideBar} from './Dashboard-Sidebar' \nimport { MainTable } from './Dashboard-Table'; \nimport { MainInsights } from './Dashboard-Insights'; \nimport { RightTopBar } from './Dashboard-Right'; \nimport { RecentUpdates } from './Dashboard-RecentUpdates'; \nimport { AsideTop } from './Dashboard-Aside-Top';  <AsideTop />\nfunction AdminDashboard () {\n    const myIcon = 'material-icons-sharp';\n    const [theme, setTheme] = useState('lightmode')\n    const [isLightActive, setIsLightActive] = useState(true)\n    const [isDarkActive, setIsDarkActive] = useState(false)\n    const [cls, setCls] = useState(); // class of aside in media Query (for mobile) whether the menu is displayed or closed\n    return(\n        <body className={theme === 'lightmode' ? 'light-theme-variables' : 'dark-theme-variables'}>\n        <div className='container'>\n            <aside className={cls}> {/* class of aside in media Query (for mobile) whether the menu is displayed or closed */}\n                <div className='top'>\n                    <div className='logo'>\n                        <img src={theme === 'lightmode' ? lightModeLogo : darkModeLogo } />\n                    </div>\n                    <div className='close' onClick={() => setCls('closed')} >\n                        <span className={myIcon}>close</span>\n                    </div>\n                </div>\n                <SideBar />\n            </aside>\n            <main>\n                <h1>Dashboard</h1>\n                <MainInsights />\n                <MainTable />\n            </main>\n            {/*-----------------------------------END OF MAIN------------------------*/}\n            <div className=\"right\">\n            <RightTopBar\n                    theme={theme}\n                    setTheme={setTheme}\n                    isLightActive={isLightActive}\n                    setIsLightActive={setIsLightActive}\n                    isDarkActive={isDarkActive}\n                    setIsDarkActive={setIsDarkActive}\n                    setCls={setCls}    />\n                {/* ------------------------END OF TOP---------------------------*/ }\n             <RecentUpdates />\n            </div>\n        </div>\n    </body>\n        \n    )\n}\nexport default AdminDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAO,sBAAsB;AAC7B,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,iBAAiB;AAG1C,SAAQC,OAAO,QAAO,qBAAqB;AAC3C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAE,aAAAA,OAAA,CAACF,QAAQ;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG;AAC/D,SAASC,cAAcA,CAAA,EAAI;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAG,sBAAsB;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,WAAW,CAAC;EAC/C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,EAAE,CAAC,CAAC;EAClC,oBACIU,OAAA;IAAMgB,SAAS,EAAER,KAAK,KAAK,WAAW,GAAG,uBAAuB,GAAG,sBAAuB;IAAAS,QAAA,eAC1FjB,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBjB,OAAA;QAAOgB,SAAS,EAAEF,GAAI;QAAAG,QAAA,GAAC,GAAC,eACpBjB,OAAA;UAAKgB,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAChBjB,OAAA;YAAKgB,SAAS,EAAC,MAAM;YAAAC,QAAA,eACjBjB,OAAA;cAAKkB,GAAG,EAAEV,KAAK,KAAK,WAAW,GAAGjB,aAAa,GAAGC;YAAc;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACjE,eACNJ,OAAA;YAAKgB,SAAS,EAAC,OAAO;YAACG,OAAO,EAAEA,CAAA,KAAMJ,MAAM,CAAC,QAAQ,CAAE;YAAAE,QAAA,eACnDjB,OAAA;cAAMgB,SAAS,EAAET,MAAO;cAAAU,QAAA,EAAC;YAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAO;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACnC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ,eACNJ,OAAA,CAACP,OAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACRJ,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,EAAI;QAAS;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAClBJ,OAAA,CAACL,YAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAChBJ,OAAA,CAACN,SAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV,eAEPJ,OAAA;QAAKgB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACtBjB,OAAA,CAACJ,WAAW;UACJY,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA,QAAS;UACnBC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCC,YAAY,EAAEA,YAAa;UAC3BC,eAAe,EAAEA,eAAgB;UACjCE,MAAM,EAAEA;QAAO;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAE5BJ,OAAA,CAACH,aAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAGX;AAACE,EAAA,CA1CQD,cAAc;AAAAe,EAAA,GAAdf,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}